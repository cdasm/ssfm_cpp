#include "bundleFunctionAndJacobian.h"




MatrixXd functionForRotationAndTransition(const MatrixXd& var0,const MatrixXd& var1)
{
	double b0,b1,b2,b3,b4,b5;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	b3=var0(0,3);
	b4=var0(0,4);
	b5=var0(0,5);
	double c0,c1,c2,c3,c4,c5;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	c3=var1(0,3);
	c4=var1(0,4);
	c5=var1(0,5);
	MatrixXd A0(1,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t12 ,t13 ,t14 ,t15 ,t16 ,t17 ,t18 ,t19 ,t20 ,t21 ,t22 ;
	t2 = c0*c0;
	t3 = t2*(1.0/4.0);
	t4 = c1*c1;
	t5 = t4*(1.0/4.0);
	t6 = c2*c2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t10 = b3-c3;
	t11 = b4-c4;
	t12 = b5-c5;
	t13 = t10*t10;
	t14 = t11*t11;
	t15 = t12*t12;
	t16 = t13+t14+t15;
	t17 = 1.0/sqrt(t16);
	t18 = t3+t5+t7-1.0;
	t19 = c2*t9;
	t20 = c1*t9;
	t21 = c0*c2*t9*(1.0/2.0);
	t22 = c0*t9;
	A0(0,0) = -b0+t10*t17*(t2*t9*(1.0/2.0)-t9*t18)+t12*t17*(t20+t21)-t11*t17*(t19-c0*c1*t9*(1.0/2.0));
	A0(0,1) = -b1+t11*t17*(t4*t9*(1.0/2.0)-t9*t18)+t10*t17*(t19+c0*c1*t9*(1.0/2.0))-t12*t17*(t22-c1*c2*t9*(1.0/2.0));
	A0(0,2) = -b2+t12*t17*(t6*t9*(1.0/2.0)-t9*t18)+t11*t17*(t22+c1*c2*t9*(1.0/2.0))-t10*t17*(t20-t21);
	return A0;
}


MatrixXd jacobianForRotationAndTransition(const MatrixXd& var0,const MatrixXd& var1)
{
	double b0,b1,b2,b3,b4,b5;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	b3=var0(0,3);
	b4=var0(0,4);
	b5=var0(0,5);
	double c0,c1,c2,c3,c4,c5;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	c3=var1(0,3);
	c4=var1(0,4);
	c5=var1(0,5);
	MatrixXd A0(3,6);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t12 ,t13 ,t14 ,t15 ,t16 ,t17 ,t18 ,t19 ,t20 ,t21 ,t22 ,t23 ,t24 ,t25 ,t33 ,t26 ,t27 ,t28 ,t29 ,t30 ,t31 ,t34 ,t32 ,t35 ,t36 ,t37 ,t38 ,t39 ,t40 ,t41 ,t42 ,t43 ,t44 ,t45 ,t46 ,t47 ,t48 ,t49 ,t50 ,t55 ,t51 ,t52 ,t54 ,t53 ,t56 ,t57 ,t58 ,t59 ,t60 ,t61 ,t62 ,t64 ,t63 ;
	t2 = b3-c3;
	t3 = b4-c4;
	t4 = b5-c5;
	t5 = c0*c0;
	t6 = t5*(1.0/4.0);
	t7 = c1*c1;
	t8 = t7*(1.0/4.0);
	t9 = c2*c2;
	t10 = t9*(1.0/4.0);
	t11 = t6+t8+t10+1.0;
	t12 = 1.0/(t11*t11);
	t13 = t2*t2;
	t14 = t3*t3;
	t15 = t4*t4;
	t16 = t13+t14+t15;
	t17 = 1.0/sqrt(t16);
	t18 = 1.0/t11;
	t19 = c0*t18*(1.0/2.0);
	t20 = c1*t18*(1.0/2.0);
	t21 = t6+t8+t10-1.0;
	t22 = c1*c2*t12*(1.0/2.0);
	t23 = c0*c1*c2*t12*(1.0/4.0);
	t24 = c2*t5*t12*(1.0/4.0);
	t25 = t5*t18*(1.0/2.0);
	t33 = t18*t21;
	t26 = t25-t33;
	t27 = b3*2.0;
	t28 = c3*2.0;
	t29 = t27-t28;
	t30 = 1.0/pow(t16,3.0/2.0);
	t31 = c2*t18;
	t34 = c0*c1*t18*(1.0/2.0);
	t32 = t31-t34;
	t35 = b4*2.0;
	t36 = c4*2.0;
	t37 = t35-t36;
	t38 = c1*t18;
	t39 = c0*c2*t18*(1.0/2.0);
	t40 = t38+t39;
	t41 = b5*2.0;
	t42 = c5*2.0;
	t43 = t41-t42;
	t44 = c0*c2*t12*(1.0/2.0);
	t45 = c1*t5*t12*(1.0/4.0);
	t46 = c0*t12*t21*(1.0/2.0);
	t47 = c0*t7*t12*(1.0/4.0);
	t48 = c2*t18*(1.0/2.0);
	t49 = c0*c1*t12*(1.0/2.0);
	t50 = t31+t34;
	t55 = t7*t18*(1.0/2.0);
	t51 = t33-t55;
	t52 = c0*t18;
	t54 = c1*c2*t18*(1.0/2.0);
	t53 = t52-t54;
	t56 = c0*t9*t12*(1.0/4.0);
	t57 = c2*t7*t12*(1.0/4.0);
	t58 = t7*t12*(1.0/2.0);
	t59 = c1*t12*t21*(1.0/2.0);
	t60 = c1*t9*t12*(1.0/4.0);
	t61 = t38-t39;
	t62 = t52+t54;
	t64 = t9*t18*(1.0/2.0);
	t63 = t33-t64;
	A0(0,0) = t2*t17*(t19+t46-c0*t5*t12*(1.0/4.0))+t3*t17*(t20+t44-c1*t5*t12*(1.0/4.0))-t4*t17*(t24+t49-c2*t18*(1.0/2.0));
	A0(0,1) = t3*t17*(t19+t22-c0*t7*t12*(1.0/4.0))-t2*t17*(t20+t45-c1*t12*t21*(1.0/2.0))-t4*t17*(-t18+t23+t58);
	A0(0,2) = -t2*t17*(t24+t48-c2*t12*t21*(1.0/2.0))-t4*t17*(-t19+t22+t56)-t3*t17*(t18+t23-t9*t12*(1.0/2.0));
	A0(0,3) = -t17*t26+t2*t26*t29*t30*(1.0/2.0)-t3*t29*t30*t32*(1.0/2.0)+t4*t29*t30*t40*(1.0/2.0);
	A0(0,4) = t17*t32+t2*t26*t30*t37*(1.0/2.0)-t3*t30*t32*t37*(1.0/2.0)+t4*t30*t37*t40*(1.0/2.0);
	A0(0,5) = -t17*t40+t2*t26*t30*t43*(1.0/2.0)-t3*t30*t32*t43*(1.0/2.0)+t4*t30*t40*t43*(1.0/2.0);
	A0(1,0) = -t2*t17*(-t20+t44+t45)-t3*t17*(t19-t46+t47)-t4*t17*(t18+t23-t5*t12*(1.0/2.0));
	A0(1,1) = t3*t17*(t20+t59-c1*t7*t12*(1.0/4.0))+t4*t17*(t48+t49-c2*t7*t12*(1.0/4.0))-t2*t17*(-t19+t22+t47);
	A0(1,2) = -t2*t17*(-t18+t23+t9*t12*(1.0/2.0))+t4*t17*(t20+t44-c1*t9*t12*(1.0/4.0))-t3*t17*(t48+t57-c2*t12*t21*(1.0/2.0));
	A0(1,3) = -t17*t50+t2*t29*t30*t50*(1.0/2.0)-t3*t29*t30*t51*(1.0/2.0)-t4*t29*t30*t53*(1.0/2.0);
	A0(1,4) = t17*t51+t2*t30*t37*t50*(1.0/2.0)-t3*t30*t37*t51*(1.0/2.0)-t4*t30*t37*t53*(1.0/2.0);
	A0(1,5) = t17*t53+t2*t30*t43*t50*(1.0/2.0)-t3*t30*t43*t51*(1.0/2.0)-t4*t30*t43*t53*(1.0/2.0);
	A0(2,0) = -t3*t17*(-t18+t23+t5*t12*(1.0/2.0))+t2*t17*(-t24+t48+t49)-t4*t17*(t19-t46+t56);
	A0(2,1) = -t2*t17*(t18+t23-t58)-t4*t17*(t20-t59+t60)-t3*t17*(-t48+t49+t57);
	A0(2,2) = t2*t17*(t19+t22-t56)-t3*t17*(-t20+t44+t60)+t4*t17*(t48-c2*t9*t12*(1.0/4.0)+c2*t12*t21*(1.0/2.0));
	A0(2,3) = t17*t61-t2*t29*t30*t61*(1.0/2.0)+t3*t29*t30*t62*(1.0/2.0)-t4*t29*t30*t63*(1.0/2.0);
	A0(2,4) = -t17*t62-t2*t30*t37*t61*(1.0/2.0)+t3*t30*t37*t62*(1.0/2.0)-t4*t30*t37*t63*(1.0/2.0);
	A0(2,5) = t17*(t33-t64)-t2*t30*t43*t61*(1.0/2.0)+t3*t30*t43*t62*(1.0/2.0)-t4*t30*t43*t63*(1.0/2.0);
	return A0;
}


MatrixXd jacobianForPoint(const MatrixXd& var0,const MatrixXd& var1)
{
	double b0,b1,b2,b3,b4,b5;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	b3=var0(0,3);
	b4=var0(0,4);
	b5=var0(0,5);
	double c0,c1,c2,c3,c4,c5;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	c3=var1(0,3);
	c4=var1(0,4);
	c5=var1(0,5);
	MatrixXd A0(3,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t12 ,t13 ,t14 ,t27 ,t15 ,t16 ,t17 ,t18 ,t19 ,t20 ,t21 ,t22 ,t23 ,t24 ,t28 ,t25 ,t26 ,t29 ,t30 ,t31 ,t32 ,t33 ,t34 ,t35 ,t36 ,t37 ,t38 ,t40 ,t39 ,t41 ,t43 ,t42 ,t44 ,t45 ,t47 ,t46 ;
	t2 = c0*c0;
	t3 = t2*(1.0/4.0);
	t4 = c1*c1;
	t5 = t4*(1.0/4.0);
	t6 = c2*c2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t10 = b3-c3;
	t11 = b4-c4;
	t12 = b5-c5;
	t13 = t2*t9*(1.0/2.0);
	t14 = t3+t5+t7-1.0;
	t27 = t9*t14;
	t15 = t13-t27;
	t16 = t10*t10;
	t17 = t11*t11;
	t18 = t12*t12;
	t19 = t16+t17+t18;
	t20 = b3*2.0;
	t21 = c3*2.0;
	t22 = t20-t21;
	t23 = 1.0/pow(t19,3.0/2.0);
	t24 = c2*t9;
	t28 = c0*c1*t9*(1.0/2.0);
	t25 = t24-t28;
	t26 = 1.0/sqrt(t19);
	t29 = b4*2.0;
	t30 = c4*2.0;
	t31 = t29-t30;
	t32 = c1*t9;
	t33 = c0*c2*t9*(1.0/2.0);
	t34 = t32+t33;
	t35 = b5*2.0;
	t36 = c5*2.0;
	t37 = t35-t36;
	t38 = t24+t28;
	t40 = t4*t9*(1.0/2.0);
	t39 = t27-t40;
	t41 = c0*t9;
	t43 = c1*c2*t9*(1.0/2.0);
	t42 = t41-t43;
	t44 = t32-t33;
	t45 = t41+t43;
	t47 = t6*t9*(1.0/2.0);
	t46 = t27-t47;
	A0(0,0) = t15*t26-t10*t15*t22*t23*(1.0/2.0)+t11*t22*t23*t25*(1.0/2.0)-t12*t22*t23*t34*(1.0/2.0);
	A0(0,1) = -t25*t26-t10*t15*t23*t31*(1.0/2.0)+t11*t23*t25*t31*(1.0/2.0)-t12*t23*t31*t34*(1.0/2.0);
	A0(0,2) = t26*t34-t10*t15*t23*t37*(1.0/2.0)+t11*t23*t25*t37*(1.0/2.0)-t12*t23*t34*t37*(1.0/2.0);
	A0(1,0) = t26*t38-t10*t22*t23*t38*(1.0/2.0)+t11*t22*t23*t39*(1.0/2.0)+t12*t22*t23*t42*(1.0/2.0);
	A0(1,1) = -t26*t39-t10*t23*t31*t38*(1.0/2.0)+t12*t23*t31*t42*(1.0/2.0)+t11*t23*t31*(t27-t40)*(1.0/2.0);
	A0(1,2) = -t26*t42-t10*t23*t37*t38*(1.0/2.0)+t12*t23*t37*t42*(1.0/2.0)+t11*t23*t37*(t27-t40)*(1.0/2.0);
	A0(2,0) = -t26*t44+t10*t22*t23*t44*(1.0/2.0)-t11*t22*t23*t45*(1.0/2.0)+t12*t22*t23*t46*(1.0/2.0);
	A0(2,1) = t26*t45+t10*t23*t31*t44*(1.0/2.0)-t11*t23*t31*t45*(1.0/2.0)+t12*t23*t31*t46*(1.0/2.0);
	A0(2,2) = -t26*t46+t10*t23*t37*t44*(1.0/2.0)-t11*t23*t37*t45*(1.0/2.0)+t12*t23*t37*(t27-t47)*(1.0/2.0);
	return A0;
}


MatrixXd functionForRotationAndTransitionUnitLength(const MatrixXd& var0,const MatrixXd& var1)
{
	double b0,b1,b2,b3,b4,b5;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	b3=var0(0,3);
	b4=var0(0,4);
	b5=var0(0,5);
	double c0,c1,c2,c3,c4;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	c3=var1(0,3);
	c4=var1(0,4);
	MatrixXd A0(1,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t11 ,t15 ,t16 ,t10 ,t18 ,t19 ,t12 ,t13 ,t14 ,t17 ,t20 ,t21 ,t22 ,t23 ,t24 ,t25 ,t26 ,t27 ,t28 ;
	t2 = c0*c0;
	t3 = t2*(1.0/4.0);
	t4 = c1*c1;
	t5 = t4*(1.0/4.0);
	t6 = c2*c2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t11 = cos(c3);
	t15 = cos(c4);
	t16 = t11*t15;
	t10 = b3-t16;
	t18 = sin(c4);
	t19 = t11*t18;
	t12 = b4-t19;
	t13 = sin(c3);
	t14 = b5-t13;
	t17 = t10*t10;
	t20 = t12*t12;
	t21 = t14*t14;
	t22 = t17+t20+t21;
	t23 = 1.0/sqrt(t22);
	t24 = t3+t5+t7-1.0;
	t25 = c2*t9;
	t26 = c1*t9;
	t27 = c0*c2*t9*(1.0/2.0);
	t28 = c0*t9;
	A0(0,0) = -b0+t10*t23*(t2*t9*(1.0/2.0)-t9*t24)+t14*t23*(t26+t27)-t12*t23*(t25-c0*c1*t9*(1.0/2.0));
	A0(0,1) = -b1+t12*t23*(t4*t9*(1.0/2.0)-t9*t24)+t10*t23*(t25+c0*c1*t9*(1.0/2.0))-t14*t23*(t28-c1*c2*t9*(1.0/2.0));
	A0(0,2) = -b2+t14*t23*(t6*t9*(1.0/2.0)-t9*t24)+t12*t23*(t28+c1*c2*t9*(1.0/2.0))-t10*t23*(t26-t27);
	return A0;
}


MatrixXd jacobianForRotationAndTransitionUnitLength(const MatrixXd& var0,const MatrixXd& var1)
{
	double b0,b1,b2,b3,b4,b5;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	b3=var0(0,3);
	b4=var0(0,4);
	b5=var0(0,5);
	double c0,c1,c2,c3,c4;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	c3=var1(0,3);
	c4=var1(0,4);
	MatrixXd A0(3,5);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t18 ,t12 ,t15 ,t16 ,t13 ,t21 ,t14 ,t17 ,t19 ,t20 ,t22 ,t23 ,t24 ,t25 ,t26 ,t27 ,t28 ,t29 ,t30 ,t31 ,t32 ,t33 ,t34 ,t43 ,t35 ,t36 ,t37 ,t38 ,t42 ,t39 ,t40 ,t44 ,t41 ,t45 ,t46 ,t47 ,t48 ,t49 ,t50 ,t51 ,t52 ,t55 ,t53 ,t54 ,t57 ,t56 ,t58 ,t59 ,t60 ,t61 ,t62 ,t63 ,t64 ,t65 ,t66 ;
	t2 = c0*c0;
	t3 = t2*(1.0/4.0);
	t4 = c1*c1;
	t5 = t4*(1.0/4.0);
	t6 = c2*c2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/(t8*t8);
	t10 = cos(c3);
	t11 = cos(c4);
	t18 = t10*t11;
	t12 = b3-t18;
	t15 = sin(c4);
	t16 = t10*t15;
	t13 = b4-t16;
	t21 = sin(c3);
	t14 = b5-t21;
	t17 = 1.0/t8;
	t19 = t12*t12;
	t20 = t13*t13;
	t22 = t14*t14;
	t23 = t19+t20+t22;
	t24 = 1.0/sqrt(t23);
	t25 = c0*t17*(1.0/2.0);
	t26 = c1*t17*(1.0/2.0);
	t27 = t3+t5+t7-1.0;
	t28 = c1*c2*t9*(1.0/2.0);
	t29 = c0*c1*c2*t9*(1.0/4.0);
	t30 = c2*t2*t9*(1.0/4.0);
	t31 = c1*t17;
	t32 = c0*c2*t17*(1.0/2.0);
	t33 = t31+t32;
	t34 = t2*t17*(1.0/2.0);
	t43 = t17*t27;
	t35 = t34-t43;
	t36 = 1.0/pow(t23,3.0/2.0);
	t37 = t11*t12*t21*2.0;
	t38 = t13*t15*t21*2.0;
	t42 = t10*t14*2.0;
	t39 = t37+t38-t42;
	t40 = c2*t17;
	t44 = c0*c1*t17*(1.0/2.0);
	t41 = t40-t44;
	t45 = t10*t11*t13*2.0;
	t46 = c0*c2*t9*(1.0/2.0);
	t47 = c1*t2*t9*(1.0/4.0);
	t48 = c0*t9*t27*(1.0/2.0);
	t49 = c0*t4*t9*(1.0/4.0);
	t50 = c2*t17*(1.0/2.0);
	t51 = c0*c1*t9*(1.0/2.0);
	t52 = c0*t17;
	t55 = c1*c2*t17*(1.0/2.0);
	t53 = t52-t55;
	t54 = t40+t44;
	t57 = t10*t12*t15*2.0;
	t56 = t45-t57;
	t58 = t43-t4*t17*(1.0/2.0);
	t59 = c0*t6*t9*(1.0/4.0);
	t60 = c1*t9*t27*(1.0/2.0);
	t61 = c2*t4*t9*(1.0/4.0);
	t62 = t4*t9*(1.0/2.0);
	t63 = c1*t6*t9*(1.0/4.0);
	t64 = t31-t32;
	t65 = t52+t55;
	t66 = t43-t6*t17*(1.0/2.0);
	A0(0,0) = t12*t24*(t25+t48-c0*t2*t9*(1.0/4.0))+t13*t24*(t26+t46-c1*t2*t9*(1.0/4.0))-t14*t24*(t30+t51-c2*t17*(1.0/2.0));
	A0(0,1) = t13*t24*(t25+t28-c0*t4*t9*(1.0/4.0))-t12*t24*(t26+t47-c1*t9*t27*(1.0/2.0))-t14*t24*(-t17+t29+t62);
	A0(0,2) = -t12*t24*(t30+t50-c2*t9*t27*(1.0/2.0))-t14*t24*(-t25+t28+t59)-t13*t24*(t17+t29-t6*t9*(1.0/2.0));
	A0(0,3) = -t10*t24*t33+t11*t21*t24*t35-t15*t21*t24*t41-t12*t35*t36*t39*(1.0/2.0)-t14*t33*t36*t39*(1.0/2.0)+t13*t36*t39*t41*(1.0/2.0);
	A0(0,4) = t10*t15*t24*t35+t10*t11*t24*t41+t12*t35*t36*t56*(1.0/2.0)+t14*t33*t36*t56*(1.0/2.0)-t13*t36*t41*t56*(1.0/2.0);
	A0(1,0) = -t12*t24*(-t26+t46+t47)-t13*t24*(t25-t48+t49)-t14*t24*(t17+t29-t2*t9*(1.0/2.0));
	A0(1,1) = t13*t24*(t26+t60-c1*t4*t9*(1.0/4.0))+t14*t24*(t50+t51-c2*t4*t9*(1.0/4.0))-t12*t24*(-t25+t28+t49);
	A0(1,2) = -t12*t24*(-t17+t29+t6*t9*(1.0/2.0))+t14*t24*(t26+t46-c1*t6*t9*(1.0/4.0))-t13*t24*(t50+t61-c2*t9*t27*(1.0/2.0));
	A0(1,3) = t10*t24*t53+t11*t21*t24*t54-t15*t21*t24*t58-t12*t36*t39*t54*(1.0/2.0)+t14*t36*t39*t53*(1.0/2.0)+t13*t36*t39*t58*(1.0/2.0);
	A0(1,4) = t10*t11*t24*t58+t10*t15*t24*t54+t12*t36*t54*t56*(1.0/2.0)-t14*t36*t53*t56*(1.0/2.0)-t13*t36*t56*t58*(1.0/2.0);
	A0(2,0) = -t13*t24*(-t17+t29+t2*t9*(1.0/2.0))+t12*t24*(-t30+t50+t51)-t14*t24*(t25-t48+t59);
	A0(2,1) = -t12*t24*(t17+t29-t62)-t14*t24*(t26-t60+t63)-t13*t24*(-t50+t51+t61);
	A0(2,2) = t12*t24*(t25+t28-t59)-t13*t24*(-t26+t46+t63)+t14*t24*(t50-c2*t6*t9*(1.0/4.0)+c2*t9*t27*(1.0/2.0));
	A0(2,3) = t10*t24*t66-t11*t21*t24*t64+t15*t21*t24*t65+t12*t36*t39*t64*(1.0/2.0)-t13*t36*t39*t65*(1.0/2.0)+t14*t36*t39*t66*(1.0/2.0);
	A0(2,4) = -t10*t11*t24*t65-t10*t15*t24*t64-t12*t36*t56*t64*(1.0/2.0)-t14*t36*t56*t66*(1.0/2.0)+t13*t36*t65*(t45-t57)*(1.0/2.0);
	return A0;
}


MatrixXd jacobianForPointUnitLength(const MatrixXd& var0,const MatrixXd& var1)
{
	double b0,b1,b2,b3,b4,b5;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	b3=var0(0,3);
	b4=var0(0,4);
	b5=var0(0,5);
	double c0,c1,c2,c3,c4;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	c3=var1(0,3);
	c4=var1(0,4);
	MatrixXd A0(3,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t11 ,t14 ,t16 ,t10 ,t18 ,t19 ,t12 ,t15 ,t13 ,t17 ,t20 ,t21 ,t22 ,t23 ,t29 ,t24 ,t25 ,t26 ,t40 ,t27 ,t28 ,t30 ,t33 ,t31 ,t32 ,t34 ,t39 ,t35 ,t36 ,t37 ,t38 ,t41 ,t42 ,t43 ,t44 ,t48 ,t45 ,t46 ,t49 ,t47 ,t50 ,t51 ,t53 ,t52 ;
	t2 = c0*c0;
	t3 = t2*(1.0/4.0);
	t4 = c1*c1;
	t5 = t4*(1.0/4.0);
	t6 = c2*c2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t11 = cos(c3);
	t14 = cos(c4);
	t16 = t11*t14;
	t10 = b3-t16;
	t18 = sin(c4);
	t19 = t11*t18;
	t12 = b4-t19;
	t15 = sin(c3);
	t13 = b5-t15;
	t17 = t10*t10;
	t20 = t12*t12;
	t21 = t13*t13;
	t22 = t17+t20+t21;
	t23 = b3*2.0;
	t29 = t11*t14*2.0;
	t24 = t23-t29;
	t25 = t2*t9*(1.0/2.0);
	t26 = t3+t5+t7-1.0;
	t40 = t9*t26;
	t27 = t25-t40;
	t28 = 1.0/pow(t22,3.0/2.0);
	t30 = c2*t9;
	t33 = c0*c1*t9*(1.0/2.0);
	t31 = t30-t33;
	t32 = 1.0/sqrt(t22);
	t34 = b4*2.0;
	t39 = t11*t18*2.0;
	t35 = t34-t39;
	t36 = c1*t9;
	t37 = c0*c2*t9*(1.0/2.0);
	t38 = t36+t37;
	t41 = b5*2.0;
	t42 = t15*2.0;
	t43 = t41-t42;
	t44 = t30+t33;
	t48 = t4*t9*(1.0/2.0);
	t45 = t40-t48;
	t46 = c0*t9;
	t49 = c1*c2*t9*(1.0/2.0);
	t47 = t46-t49;
	t50 = t36-t37;
	t51 = t46+t49;
	t53 = t6*t9*(1.0/2.0);
	t52 = t40-t53;
	A0(0,0) = t27*t32-t10*t24*t27*t28*(1.0/2.0)+t12*t24*t28*t31*(1.0/2.0)-t13*t24*t28*t38*(1.0/2.0);
	A0(0,1) = -t31*t32-t10*t27*t28*t35*(1.0/2.0)+t12*t28*t31*t35*(1.0/2.0)-t13*t28*t35*t38*(1.0/2.0);
	A0(0,2) = t32*t38-t10*t27*t28*t43*(1.0/2.0)+t12*t28*t31*t43*(1.0/2.0)-t13*t28*t38*t43*(1.0/2.0);
	A0(1,0) = t32*t44-t10*t24*t28*t44*(1.0/2.0)+t12*t24*t28*t45*(1.0/2.0)+t13*t24*t28*t47*(1.0/2.0);
	A0(1,1) = -t32*t45-t10*t28*t35*t44*(1.0/2.0)+t13*t28*t35*t47*(1.0/2.0)+t12*t28*t35*(t40-t48)*(1.0/2.0);
	A0(1,2) = -t32*t47-t10*t28*t43*t44*(1.0/2.0)+t13*t28*t43*t47*(1.0/2.0)+t12*t28*t43*(t40-t48)*(1.0/2.0);
	A0(2,0) = -t32*t50+t10*t24*t28*t50*(1.0/2.0)-t12*t24*t28*t51*(1.0/2.0)+t13*t24*t28*t52*(1.0/2.0);
	A0(2,1) = t32*t51+t10*t28*t35*t50*(1.0/2.0)-t12*t28*t35*t51*(1.0/2.0)+t13*t28*t35*t52*(1.0/2.0);
	A0(2,2) = -t32*t52+t10*t28*t43*t50*(1.0/2.0)-t12*t28*t43*t51*(1.0/2.0)+t13*t28*t43*(t40-t53)*(1.0/2.0);
	return A0;
}


