#include "bundleFunctionAndJacobian.h"


MatrixXd projectionError(const MatrixXd& var0,const MatrixXd& var1,const MatrixXd& var2)
{
	double b0,b1,b2;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	double c0,c1,c2;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	double d0,d1,d2,d3,d4,d5;
	d0=var2(0,0);
	d1=var2(0,1);
	d2=var2(0,2);
	d3=var2(0,3);
	d4=var2(0,4);
	d5=var2(0,5);
	MatrixXd A0(1,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t12 ,t13 ,t14 ,t15 ,t16 ,t17 ,t18 ,t19 ,t20 ,t21 ,t22 ;
	t2 = d0*d0;
	t3 = t2*(1.0/4.0);
	t4 = d1*d1;
	t5 = t4*(1.0/4.0);
	t6 = d2*d2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t10 = c0-d3;
	t11 = c1-d4;
	t12 = c2-d5;
	t13 = t10*t10;
	t14 = t11*t11;
	t15 = t12*t12;
	t16 = t13+t14+t15;
	t17 = 1.0/sqrt(t16);
	t18 = t3+t5+t7-1.0;
	t19 = d2*t9;
	t20 = d1*t9;
	t21 = d0*d2*t9*(1.0/2.0);
	t22 = d0*t9;
	A0(0,0) = -b0+t10*t17*(t2*t9*(1.0/2.0)-t9*t18)+t12*t17*(t20+t21)-t11*t17*(t19-d0*d1*t9*(1.0/2.0));
	A0(0,1) = -b1+t11*t17*(t4*t9*(1.0/2.0)-t9*t18)+t10*t17*(t19+d0*d1*t9*(1.0/2.0))-t12*t17*(t22-d1*d2*t9*(1.0/2.0));
	A0(0,2) = -b2+t12*t17*(t6*t9*(1.0/2.0)-t9*t18)+t11*t17*(t22+d1*d2*t9*(1.0/2.0))-t10*t17*(t20-t21);
	return A0;
}


MatrixXd jacobianForCamera(const MatrixXd& var0,const MatrixXd& var1,const MatrixXd& var2)
{
	double b0,b1,b2;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	double c0,c1,c2;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	double d0,d1,d2,d3,d4,d5;
	d0=var2(0,0);
	d1=var2(0,1);
	d2=var2(0,2);
	d3=var2(0,3);
	d4=var2(0,4);
	d5=var2(0,5);
	MatrixXd A0(3,6);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t12 ,t13 ,t14 ,t15 ,t16 ,t17 ,t18 ,t19 ,t20 ,t21 ,t22 ,t23 ,t24 ,t25 ,t33 ,t26 ,t27 ,t28 ,t29 ,t30 ,t31 ,t34 ,t32 ,t35 ,t36 ,t37 ,t38 ,t39 ,t40 ,t41 ,t42 ,t43 ,t44 ,t45 ,t46 ,t47 ,t48 ,t49 ,t50 ,t55 ,t51 ,t52 ,t54 ,t53 ,t56 ,t57 ,t58 ,t59 ,t60 ,t61 ,t62 ,t64 ,t63 ;
	t2 = c0-d3;
	t3 = c1-d4;
	t4 = c2-d5;
	t5 = d0*d0;
	t6 = t5*(1.0/4.0);
	t7 = d1*d1;
	t8 = t7*(1.0/4.0);
	t9 = d2*d2;
	t10 = t9*(1.0/4.0);
	t11 = t6+t8+t10+1.0;
	t12 = 1.0/(t11*t11);
	t13 = t2*t2;
	t14 = t3*t3;
	t15 = t4*t4;
	t16 = t13+t14+t15;
	t17 = 1.0/sqrt(t16);
	t18 = 1.0/t11;
	t19 = d0*t18*(1.0/2.0);
	t20 = d1*t18*(1.0/2.0);
	t21 = t6+t8+t10-1.0;
	t22 = d1*d2*t12*(1.0/2.0);
	t23 = d0*d1*d2*t12*(1.0/4.0);
	t24 = d2*t5*t12*(1.0/4.0);
	t25 = t5*t18*(1.0/2.0);
	t33 = t18*t21;
	t26 = t25-t33;
	t27 = c0*2.0;
	t28 = d3*2.0;
	t29 = t27-t28;
	t30 = 1.0/pow(t16,3.0/2.0);
	t31 = d2*t18;
	t34 = d0*d1*t18*(1.0/2.0);
	t32 = t31-t34;
	t35 = c1*2.0;
	t36 = d4*2.0;
	t37 = t35-t36;
	t38 = d1*t18;
	t39 = d0*d2*t18*(1.0/2.0);
	t40 = t38+t39;
	t41 = c2*2.0;
	t42 = d5*2.0;
	t43 = t41-t42;
	t44 = d0*d2*t12*(1.0/2.0);
	t45 = d1*t5*t12*(1.0/4.0);
	t46 = d0*t12*t21*(1.0/2.0);
	t47 = d0*t7*t12*(1.0/4.0);
	t48 = d2*t18*(1.0/2.0);
	t49 = d0*d1*t12*(1.0/2.0);
	t50 = t31+t34;
	t55 = t7*t18*(1.0/2.0);
	t51 = t33-t55;
	t52 = d0*t18;
	t54 = d1*d2*t18*(1.0/2.0);
	t53 = t52-t54;
	t56 = d0*t9*t12*(1.0/4.0);
	t57 = d2*t7*t12*(1.0/4.0);
	t58 = t7*t12*(1.0/2.0);
	t59 = d1*t12*t21*(1.0/2.0);
	t60 = d1*t9*t12*(1.0/4.0);
	t61 = t38-t39;
	t62 = t52+t54;
	t64 = t9*t18*(1.0/2.0);
	t63 = t33-t64;
	A0(0,0) = t2*t17*(t19+t46-d0*t5*t12*(1.0/4.0))+t3*t17*(t20+t44-d1*t5*t12*(1.0/4.0))-t4*t17*(t24+t49-d2*t18*(1.0/2.0));
	A0(0,1) = t3*t17*(t19+t22-d0*t7*t12*(1.0/4.0))-t2*t17*(t20+t45-d1*t12*t21*(1.0/2.0))-t4*t17*(-t18+t23+t58);
	A0(0,2) = -t2*t17*(t24+t48-d2*t12*t21*(1.0/2.0))-t4*t17*(-t19+t22+t56)-t3*t17*(t18+t23-t9*t12*(1.0/2.0));
	A0(0,3) = -t17*t26+t2*t26*t29*t30*(1.0/2.0)-t3*t29*t30*t32*(1.0/2.0)+t4*t29*t30*t40*(1.0/2.0);
	A0(0,4) = t17*t32+t2*t26*t30*t37*(1.0/2.0)-t3*t30*t32*t37*(1.0/2.0)+t4*t30*t37*t40*(1.0/2.0);
	A0(0,5) = -t17*t40+t2*t26*t30*t43*(1.0/2.0)-t3*t30*t32*t43*(1.0/2.0)+t4*t30*t40*t43*(1.0/2.0);
	A0(1,0) = -t2*t17*(-t20+t44+t45)-t3*t17*(t19-t46+t47)-t4*t17*(t18+t23-t5*t12*(1.0/2.0));
	A0(1,1) = t3*t17*(t20+t59-d1*t7*t12*(1.0/4.0))+t4*t17*(t48+t49-d2*t7*t12*(1.0/4.0))-t2*t17*(-t19+t22+t47);
	A0(1,2) = -t2*t17*(-t18+t23+t9*t12*(1.0/2.0))+t4*t17*(t20+t44-d1*t9*t12*(1.0/4.0))-t3*t17*(t48+t57-d2*t12*t21*(1.0/2.0));
	A0(1,3) = -t17*t50+t2*t29*t30*t50*(1.0/2.0)-t3*t29*t30*t51*(1.0/2.0)-t4*t29*t30*t53*(1.0/2.0);
	A0(1,4) = t17*t51+t2*t30*t37*t50*(1.0/2.0)-t3*t30*t37*t51*(1.0/2.0)-t4*t30*t37*t53*(1.0/2.0);
	A0(1,5) = t17*t53+t2*t30*t43*t50*(1.0/2.0)-t3*t30*t43*t51*(1.0/2.0)-t4*t30*t43*t53*(1.0/2.0);
	A0(2,0) = -t3*t17*(-t18+t23+t5*t12*(1.0/2.0))+t2*t17*(-t24+t48+t49)-t4*t17*(t19-t46+t56);
	A0(2,1) = -t2*t17*(t18+t23-t58)-t4*t17*(t20-t59+t60)-t3*t17*(-t48+t49+t57);
	A0(2,2) = t2*t17*(t19+t22-t56)-t3*t17*(-t20+t44+t60)+t4*t17*(t48-d2*t9*t12*(1.0/4.0)+d2*t12*t21*(1.0/2.0));
	A0(2,3) = t17*t61-t2*t29*t30*t61*(1.0/2.0)+t3*t29*t30*t62*(1.0/2.0)-t4*t29*t30*t63*(1.0/2.0);
	A0(2,4) = -t17*t62-t2*t30*t37*t61*(1.0/2.0)+t3*t30*t37*t62*(1.0/2.0)-t4*t30*t37*t63*(1.0/2.0);
	A0(2,5) = t17*(t33-t64)-t2*t30*t43*t61*(1.0/2.0)+t3*t30*t43*t62*(1.0/2.0)-t4*t30*t43*t63*(1.0/2.0);
	return A0;
}


MatrixXd jacobianForPoint(const MatrixXd& var0,const MatrixXd& var1,const MatrixXd& var2)
{
	double b0,b1,b2;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	double c0,c1,c2;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	double d0,d1,d2,d3,d4,d5;
	d0=var2(0,0);
	d1=var2(0,1);
	d2=var2(0,2);
	d3=var2(0,3);
	d4=var2(0,4);
	d5=var2(0,5);
	MatrixXd A0(3,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t12 ,t13 ,t14 ,t27 ,t15 ,t16 ,t17 ,t18 ,t19 ,t20 ,t21 ,t22 ,t23 ,t24 ,t28 ,t25 ,t26 ,t29 ,t30 ,t31 ,t32 ,t33 ,t34 ,t35 ,t36 ,t37 ,t38 ,t40 ,t39 ,t41 ,t43 ,t42 ,t44 ,t45 ,t47 ,t46 ;
	t2 = d0*d0;
	t3 = t2*(1.0/4.0);
	t4 = d1*d1;
	t5 = t4*(1.0/4.0);
	t6 = d2*d2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t10 = c0-d3;
	t11 = c1-d4;
	t12 = c2-d5;
	t13 = t2*t9*(1.0/2.0);
	t14 = t3+t5+t7-1.0;
	t27 = t9*t14;
	t15 = t13-t27;
	t16 = t10*t10;
	t17 = t11*t11;
	t18 = t12*t12;
	t19 = t16+t17+t18;
	t20 = c0*2.0;
	t21 = d3*2.0;
	t22 = t20-t21;
	t23 = 1.0/pow(t19,3.0/2.0);
	t24 = d2*t9;
	t28 = d0*d1*t9*(1.0/2.0);
	t25 = t24-t28;
	t26 = 1.0/sqrt(t19);
	t29 = c1*2.0;
	t30 = d4*2.0;
	t31 = t29-t30;
	t32 = d1*t9;
	t33 = d0*d2*t9*(1.0/2.0);
	t34 = t32+t33;
	t35 = c2*2.0;
	t36 = d5*2.0;
	t37 = t35-t36;
	t38 = t24+t28;
	t40 = t4*t9*(1.0/2.0);
	t39 = t27-t40;
	t41 = d0*t9;
	t43 = d1*d2*t9*(1.0/2.0);
	t42 = t41-t43;
	t44 = t32-t33;
	t45 = t41+t43;
	t47 = t6*t9*(1.0/2.0);
	t46 = t27-t47;
	A0(0,0) = t15*t26-t10*t15*t22*t23*(1.0/2.0)+t11*t22*t23*t25*(1.0/2.0)-t12*t22*t23*t34*(1.0/2.0);
	A0(0,1) = -t25*t26-t10*t15*t23*t31*(1.0/2.0)+t11*t23*t25*t31*(1.0/2.0)-t12*t23*t31*t34*(1.0/2.0);
	A0(0,2) = t26*t34-t10*t15*t23*t37*(1.0/2.0)+t11*t23*t25*t37*(1.0/2.0)-t12*t23*t34*t37*(1.0/2.0);
	A0(1,0) = t26*t38-t10*t22*t23*t38*(1.0/2.0)+t11*t22*t23*t39*(1.0/2.0)+t12*t22*t23*t42*(1.0/2.0);
	A0(1,1) = -t26*t39-t10*t23*t31*t38*(1.0/2.0)+t12*t23*t31*t42*(1.0/2.0)+t11*t23*t31*(t27-t40)*(1.0/2.0);
	A0(1,2) = -t26*t42-t10*t23*t37*t38*(1.0/2.0)+t12*t23*t37*t42*(1.0/2.0)+t11*t23*t37*(t27-t40)*(1.0/2.0);
	A0(2,0) = -t26*t44+t10*t22*t23*t44*(1.0/2.0)-t11*t22*t23*t45*(1.0/2.0)+t12*t22*t23*t46*(1.0/2.0);
	A0(2,1) = t26*t45+t10*t23*t31*t44*(1.0/2.0)-t11*t23*t31*t45*(1.0/2.0)+t12*t23*t31*t46*(1.0/2.0);
	A0(2,2) = -t26*t46+t10*t23*t37*t44*(1.0/2.0)-t11*t23*t37*t45*(1.0/2.0)+t12*t23*t37*(t27-t47)*(1.0/2.0);
	return A0;
}


MatrixXd projectionErrorUnitLength(const MatrixXd& var0,const MatrixXd& var1,const MatrixXd& var2)
{
	double b0,b1,b2;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	double c0,c1,c2;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	double d0,d1,d2,d3,d4;
	d0=var2(0,0);
	d1=var2(0,1);
	d2=var2(0,2);
	d3=var2(0,3);
	d4=var2(0,4);
	MatrixXd A0(1,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t16 ,t17 ,t11 ,t12 ,t19 ,t13 ,t15 ,t14 ,t18 ,t20 ,t21 ,t22 ,t23 ,t24 ,t25 ,t26 ,t27 ,t28 ;
	t2 = d0*d0;
	t3 = t2*(1.0/4.0);
	t4 = d1*d1;
	t5 = t4*(1.0/4.0);
	t6 = d2*d2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t10 = cos(d3);
	t16 = cos(d4);
	t17 = t10*t16;
	t11 = c0-t17;
	t12 = sin(d4);
	t19 = t10*t12;
	t13 = c1-t19;
	t15 = sin(d3);
	t14 = c2-t15;
	t18 = t11*t11;
	t20 = t13*t13;
	t21 = t14*t14;
	t22 = t18+t20+t21;
	t23 = 1.0/sqrt(t22);
	t24 = t3+t5+t7-1.0;
	t25 = d2*t9;
	t26 = d0*t9;
	t27 = d1*t9;
	t28 = d0*d2*t9*(1.0/2.0);
	A0(0,0) = -b0+t11*t23*(t2*t9*(1.0/2.0)-t9*t24)+t14*t23*(t27+t28)-t13*t23*(t25-d0*d1*t9*(1.0/2.0));
	A0(0,1) = -b1+t13*t23*(t4*t9*(1.0/2.0)-t9*t24)+t11*t23*(t25+d0*d1*t9*(1.0/2.0))-t14*t23*(t26-d1*d2*t9*(1.0/2.0));
	A0(0,2) = -b2+t14*t23*(t6*t9*(1.0/2.0)-t9*t24)+t13*t23*(t26+d1*d2*t9*(1.0/2.0))-t11*t23*(t27-t28);
	return A0;
}


MatrixXd jacobianForCameraUnitLength(const MatrixXd& var0,const MatrixXd& var1,const MatrixXd& var2)
{
	double b0,b1,b2;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	double c0,c1,c2;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	double d0,d1,d2,d3,d4;
	d0=var2(0,0);
	d1=var2(0,1);
	d2=var2(0,2);
	d3=var2(0,3);
	d4=var2(0,4);
	MatrixXd A0(3,5);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t10 ,t11 ,t18 ,t12 ,t15 ,t16 ,t13 ,t21 ,t14 ,t17 ,t19 ,t20 ,t22 ,t23 ,t24 ,t25 ,t26 ,t27 ,t28 ,t29 ,t30 ,t31 ,t32 ,t33 ,t34 ,t43 ,t35 ,t36 ,t37 ,t38 ,t42 ,t39 ,t40 ,t44 ,t41 ,t45 ,t47 ,t46 ,t48 ,t49 ,t50 ,t51 ,t52 ,t53 ,t54 ,t59 ,t55 ,t56 ,t58 ,t57 ,t60 ,t61 ,t62 ,t63 ,t64 ,t65 ,t66 ,t67 ;
	t2 = d0*d0;
	t3 = t2*(1.0/4.0);
	t4 = d1*d1;
	t5 = t4*(1.0/4.0);
	t6 = d2*d2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/(t8*t8);
	t10 = cos(d3);
	t11 = cos(d4);
	t18 = t10*t11;
	t12 = c0-t18;
	t15 = sin(d4);
	t16 = t10*t15;
	t13 = c1-t16;
	t21 = sin(d3);
	t14 = c2-t21;
	t17 = 1.0/t8;
	t19 = t12*t12;
	t20 = t13*t13;
	t22 = t14*t14;
	t23 = t19+t20+t22;
	t24 = 1.0/sqrt(t23);
	t25 = d1*t17*(1.0/2.0);
	t26 = t3+t5+t7-1.0;
	t27 = d0*t17*(1.0/2.0);
	t28 = d2*t2*t9*(1.0/4.0);
	t29 = d1*d2*t9*(1.0/2.0);
	t30 = d0*d1*d2*t9*(1.0/4.0);
	t31 = d1*t17;
	t32 = d0*d2*t17*(1.0/2.0);
	t33 = t31+t32;
	t34 = t2*t17*(1.0/2.0);
	t43 = t17*t26;
	t35 = t34-t43;
	t36 = 1.0/pow(t23,3.0/2.0);
	t37 = t11*t12*t21*2.0;
	t38 = t13*t15*t21*2.0;
	t42 = t10*t14*2.0;
	t39 = t37+t38-t42;
	t40 = d2*t17;
	t44 = d0*d1*t17*(1.0/2.0);
	t41 = t40-t44;
	t45 = t10*t11*t13*2.0;
	t47 = t10*t12*t15*2.0;
	t46 = t45-t47;
	t48 = d0*t9*t26*(1.0/2.0);
	t49 = d0*d2*t9*(1.0/2.0);
	t50 = d1*t2*t9*(1.0/4.0);
	t51 = d0*t4*t9*(1.0/4.0);
	t52 = d2*t17*(1.0/2.0);
	t53 = d0*d1*t9*(1.0/2.0);
	t54 = d0*t17;
	t59 = d1*d2*t17*(1.0/2.0);
	t55 = t54-t59;
	t56 = t40+t44;
	t58 = t4*t17*(1.0/2.0);
	t57 = t43-t58;
	t60 = d0*t6*t9*(1.0/4.0);
	t61 = d1*t9*t26*(1.0/2.0);
	t62 = d2*t4*t9*(1.0/4.0);
	t63 = t4*t9*(1.0/2.0);
	t64 = d1*t6*t9*(1.0/4.0);
	t65 = t31-t32;
	t66 = t54+t59;
	t67 = t43-t6*t17*(1.0/2.0);
	A0(0,0) = t12*t24*(t27+t48-d0*t2*t9*(1.0/4.0))+t13*t24*(t25+t49-d1*t2*t9*(1.0/4.0))-t14*t24*(t28+t53-d2*t17*(1.0/2.0));
	A0(0,1) = t13*t24*(t27+t29-d0*t4*t9*(1.0/4.0))-t12*t24*(t25+t50-d1*t9*t26*(1.0/2.0))-t14*t24*(-t17+t30+t63);
	A0(0,2) = -t12*t24*(t28+t52-d2*t9*t26*(1.0/2.0))-t14*t24*(-t27+t29+t60)-t13*t24*(t17+t30-t6*t9*(1.0/2.0));
	A0(0,3) = -t10*t24*t33+t11*t21*t24*t35-t15*t21*t24*t41-t12*t35*t36*t39*(1.0/2.0)-t14*t33*t36*t39*(1.0/2.0)+t13*t36*t39*t41*(1.0/2.0);
	A0(0,4) = t10*t15*t24*t35+t10*t11*t24*t41+t12*t35*t36*t46*(1.0/2.0)-t13*t36*t41*t46*(1.0/2.0)+t14*t33*t36*(t45-t47)*(1.0/2.0);
	A0(1,0) = -t12*t24*(-t25+t49+t50)-t13*t24*(t27-t48+t51)-t14*t24*(t17+t30-t2*t9*(1.0/2.0));
	A0(1,1) = t13*t24*(t25+t61-d1*t4*t9*(1.0/4.0))+t14*t24*(t52+t53-d2*t4*t9*(1.0/4.0))-t12*t24*(-t27+t29+t51);
	A0(1,2) = -t12*t24*(-t17+t30+t6*t9*(1.0/2.0))+t14*t24*(t25+t49-d1*t6*t9*(1.0/4.0))-t13*t24*(t52+t62-d2*t9*t26*(1.0/2.0));
	A0(1,3) = t10*t24*t55+t11*t21*t24*t56-t15*t21*t24*t57-t12*t36*t39*t56*(1.0/2.0)+t14*t36*t39*t55*(1.0/2.0)+t13*t36*t39*t57*(1.0/2.0);
	A0(1,4) = t10*t15*t24*t56-t14*t36*t46*t55*(1.0/2.0)-t13*t36*t46*t57*(1.0/2.0)+t10*t11*t24*(t43-t58)+t12*t36*t56*(t45-t47)*(1.0/2.0);
	A0(2,0) = -t13*t24*(-t17+t30+t2*t9*(1.0/2.0))+t12*t24*(-t28+t52+t53)-t14*t24*(t27-t48+t60);
	A0(2,1) = -t12*t24*(t17+t30-t63)-t14*t24*(t25-t61+t64)-t13*t24*(-t52+t53+t62);
	A0(2,2) = t12*t24*(t27+t29-t60)-t13*t24*(-t25+t49+t64)+t14*t24*(t52-d2*t6*t9*(1.0/4.0)+d2*t9*t26*(1.0/2.0));
	A0(2,3) = t10*t24*t67-t11*t21*t24*t65+t15*t21*t24*t66+t12*t36*t39*t65*(1.0/2.0)-t13*t36*t39*t66*(1.0/2.0)+t14*t36*t39*t67*(1.0/2.0);
	A0(2,4) = -t10*t11*t24*t66-t10*t15*t24*t65-t12*t36*t46*t65*(1.0/2.0)-t14*t36*t46*t67*(1.0/2.0)+t13*t36*t66*(t45-t47)*(1.0/2.0);
	return A0;
}


MatrixXd jacobianForPointUnitLength(const MatrixXd& var0,const MatrixXd& var1,const MatrixXd& var2)
{
	double b0,b1,b2;
	b0=var0(0,0);
	b1=var0(0,1);
	b2=var0(0,2);
	double c0,c1,c2;
	c0=var1(0,0);
	c1=var1(0,1);
	c2=var1(0,2);
	double d0,d1,d2,d3,d4;
	d0=var2(0,0);
	d1=var2(0,1);
	d2=var2(0,2);
	d3=var2(0,3);
	d4=var2(0,4);
	MatrixXd A0(3,3);
	double t2 ,t3 ,t4 ,t5 ,t6 ,t7 ,t8 ,t9 ,t11 ,t14 ,t17 ,t10 ,t15 ,t16 ,t12 ,t20 ,t13 ,t18 ,t19 ,t21 ,t22 ,t23 ,t26 ,t24 ,t25 ,t27 ,t28 ,t40 ,t29 ,t30 ,t33 ,t31 ,t32 ,t34 ,t39 ,t35 ,t36 ,t37 ,t38 ,t41 ,t42 ,t43 ,t44 ,t48 ,t45 ,t46 ,t49 ,t47 ,t50 ,t51 ,t53 ,t52 ;
	t2 = d0*d0;
	t3 = t2*(1.0/4.0);
	t4 = d1*d1;
	t5 = t4*(1.0/4.0);
	t6 = d2*d2;
	t7 = t6*(1.0/4.0);
	t8 = t3+t5+t7+1.0;
	t9 = 1.0/t8;
	t11 = cos(d3);
	t14 = cos(d4);
	t17 = t11*t14;
	t10 = c0-t17;
	t15 = sin(d4);
	t16 = t11*t15;
	t12 = c1-t16;
	t20 = sin(d3);
	t13 = c2-t20;
	t18 = t10*t10;
	t19 = t12*t12;
	t21 = t13*t13;
	t22 = t18+t19+t21;
	t23 = c0*2.0;
	t26 = t11*t14*2.0;
	t24 = t23-t26;
	t25 = 1.0/pow(t22,3.0/2.0);
	t27 = t2*t9*(1.0/2.0);
	t28 = t3+t5+t7-1.0;
	t40 = t9*t28;
	t29 = t27-t40;
	t30 = d2*t9;
	t33 = d0*d1*t9*(1.0/2.0);
	t31 = t30-t33;
	t32 = 1.0/sqrt(t22);
	t34 = c1*2.0;
	t39 = t11*t15*2.0;
	t35 = t34-t39;
	t36 = d1*t9;
	t37 = d0*d2*t9*(1.0/2.0);
	t38 = t36+t37;
	t41 = c2*2.0;
	t42 = t20*2.0;
	t43 = t41-t42;
	t44 = t30+t33;
	t48 = t4*t9*(1.0/2.0);
	t45 = t40-t48;
	t46 = d0*t9;
	t49 = d1*d2*t9*(1.0/2.0);
	t47 = t46-t49;
	t50 = t36-t37;
	t51 = t46+t49;
	t53 = t6*t9*(1.0/2.0);
	t52 = t40-t53;
	A0(0,0) = t29*t32-t10*t24*t25*t29*(1.0/2.0)+t12*t24*t25*t31*(1.0/2.0)-t13*t24*t25*t38*(1.0/2.0);
	A0(0,1) = -t31*t32-t10*t25*t29*t35*(1.0/2.0)+t12*t25*t31*t35*(1.0/2.0)-t13*t25*t35*t38*(1.0/2.0);
	A0(0,2) = t32*t38-t10*t25*t29*t43*(1.0/2.0)+t12*t25*t31*t43*(1.0/2.0)-t13*t25*t38*t43*(1.0/2.0);
	A0(1,0) = t32*t44-t10*t24*t25*t44*(1.0/2.0)+t12*t24*t25*t45*(1.0/2.0)+t13*t24*t25*t47*(1.0/2.0);
	A0(1,1) = -t32*t45-t10*t25*t35*t44*(1.0/2.0)+t13*t25*t35*t47*(1.0/2.0)+t12*t25*t35*(t40-t48)*(1.0/2.0);
	A0(1,2) = -t32*t47-t10*t25*t43*t44*(1.0/2.0)+t13*t25*t43*t47*(1.0/2.0)+t12*t25*t43*(t40-t48)*(1.0/2.0);
	A0(2,0) = -t32*t50+t10*t24*t25*t50*(1.0/2.0)-t12*t24*t25*t51*(1.0/2.0)+t13*t24*t25*t52*(1.0/2.0);
	A0(2,1) = t32*t51+t10*t25*t35*t50*(1.0/2.0)-t12*t25*t35*t51*(1.0/2.0)+t13*t25*t35*t52*(1.0/2.0);
	A0(2,2) = -t32*t52+t10*t25*t43*t50*(1.0/2.0)-t12*t25*t43*t51*(1.0/2.0)+t13*t25*t43*(t40-t53)*(1.0/2.0);
	return A0;
}


